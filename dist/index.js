"use strict";var l=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var M=Object.prototype.hasOwnProperty;var m=n=>{throw TypeError(n)};var f=(n,t)=>{for(var e in t)l(n,e,{get:t[e],enumerable:!0})},x=(n,t,e,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of y(t))!M.call(n,o)&&o!==e&&l(n,o,{get:()=>t[o],enumerable:!(i=S(t,o))||i.enumerable});return n};var C=n=>x(l({},"__esModule",{value:!0}),n);var N=(n,t,e)=>t.has(n)||m("Cannot "+e);var d=(n,t,e)=>(N(n,t,"read from private field"),e?e.call(n):t.get(n)),g=(n,t,e)=>t.has(n)?m("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(n):t.set(n,e);var A={};f(A,{default:()=>u});module.exports=C(A);var a,u=class{constructor(){g(this,a,new Map);this.audioContext=new AudioContext,this.audioDestination=this.audioContext.createMediaStreamDestination(),this.videoSyncDelayNode=this.audioContext.createDelay(5),this.videoSyncDelayNode.connect(this.audioDestination);let t=this.audioContext.createGain(),e=this.audioContext.createConstantSource();t.gain.value=0,e.start(),e.connect(t),t.connect(this.videoSyncDelayNode);let i=this.audioContext.createConstantSource(),o=this.audioContext.createGain();o.gain.value=.001,i.connect(o),o.connect(this.audioContext.destination),i.start()}getContext(){return this.audioContext}getOutputStream(){return this.audioDestination.stream}getSources(){return d(this,a)}getSource(t){return d(this,a).get(t)}addSource(t,e){if(!(e instanceof MediaStream)&&!(e instanceof HTMLMediaElement))return console.warn("AudioMixer: You can only add MediaStream & HTMLMediaElement sources!"),null;let i=d(this,a).get(e.id);if(i)return console.warn("AudioMixer: This source has been added before!",e.id),i;let o=e instanceof MediaStream?this.audioContext.createMediaStreamSource(e):this.audioContext.createMediaElementSource(e),r=this.audioContext.createGain(),s=o.context.createGain(),c=this.audioContext.createAnalyser();r.gain.value=1,s.gain.setValueAtTime(1,o.context.currentTime),o.connect(s),s.connect(r),r.connect(this.videoSyncDelayNode),c.fftSize=256,o.connect(c);let h={id:e.id,name:t,audioSource:o,analyser:c,audioData:new Uint8Array(c.frequencyBinCount),gainNode:s};return d(this,a).set(e.id,h),h}removeSource(t){let{audioSource:e,analyser:i}=d(this,a).get(t)||{};e&&(e instanceof MediaStream&&e.getTracks().forEach(o=>{o.stop()}),e instanceof MediaElementAudioSourceNode&&(e.mediaElement.pause(),e.mediaElement.remove()),i&&e.disconnect(i),d(this,a).delete(t))}updateVolume(t,e){let i=this.getContext(),o=this.getSource(t);i&&o&&o.gainNode.gain.setValueAtTime(e/100,i.currentTime)}getVolumeInDecibels(t){let e=d(this,a).get(t);if(e){e.analyser.getByteFrequencyData(e.audioData);let i=0;e.audioData.forEach(s=>{i+=s});let o=i/e.analyser.frequencyBinCount,r=Math.floor(20*Math.log10(o/255));return r===-1/0?0:r}return null}destroy(){Array.from(d(this,a)).map(([,t])=>this.removeSource(t.id)),this.audioDestination.stream.getTracks().forEach(t=>t.stop()),this.audioDestination.disconnect(),this.videoSyncDelayNode.disconnect(),this.audioContext.close()}};a=new WeakMap;
//# sourceMappingURL=index.js.map