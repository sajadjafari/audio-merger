var h=i=>{throw TypeError(i)};var g=(i,t,e)=>t.has(i)||h("Cannot "+e);var d=(i,t,e)=>(g(i,t,"read from private field"),e?e.call(i):t.get(i)),m=(i,t,e)=>t.has(i)?h("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(i):t.set(i,e);var a,u=class{constructor(){m(this,a,new Map);this.audioContext=new AudioContext,this.audioDestination=this.audioContext.createMediaStreamDestination(),this.videoSyncDelayNode=this.audioContext.createDelay(5),this.videoSyncDelayNode.connect(this.audioDestination);let t=this.audioContext.createGain(),e=this.audioContext.createConstantSource();t.gain.value=0,e.start(),e.connect(t),t.connect(this.videoSyncDelayNode);let n=this.audioContext.createConstantSource(),o=this.audioContext.createGain();o.gain.value=.001,n.connect(o),o.connect(this.audioContext.destination),n.start()}getContext(){return this.audioContext}getOutputStream(){return this.audioDestination.stream}getSources(){return d(this,a)}getSource(t){return d(this,a).get(t)}addSource(t,e){if(!(e instanceof MediaStream)&&!(e instanceof HTMLMediaElement))return console.warn("AudioMixer: You can only add MediaStream & HTMLMediaElement sources!"),null;let n=d(this,a).get(e.id);if(n)return console.warn("AudioMixer: This source has been added before!",e.id),n;let o=e instanceof MediaStream?this.audioContext.createMediaStreamSource(e):this.audioContext.createMediaElementSource(e),r=this.audioContext.createGain(),s=o.context.createGain(),c=this.audioContext.createAnalyser();r.gain.value=1,s.gain.setValueAtTime(1,o.context.currentTime),o.connect(s),s.connect(r),r.connect(this.videoSyncDelayNode),c.fftSize=256,o.connect(c);let l={id:e.id,name:t,audioSource:o,analyser:c,audioData:new Uint8Array(c.frequencyBinCount),gainNode:s};return d(this,a).set(e.id,l),l}removeSource(t){let{audioSource:e,analyser:n}=d(this,a).get(t)||{};e&&(e instanceof MediaStream&&e.getTracks().forEach(o=>{o.stop()}),e instanceof MediaElementAudioSourceNode&&(e.mediaElement.pause(),e.mediaElement.remove()),n&&e.disconnect(n),d(this,a).delete(t))}updateVolume(t,e){let n=this.getContext(),o=this.getSource(t);n&&o&&o.gainNode.gain.setValueAtTime(e/100,n.currentTime)}getVolumeInDecibels(t){let e=d(this,a).get(t);if(e){e.analyser.getByteFrequencyData(e.audioData);let n=0;e.audioData.forEach(s=>{n+=s});let o=n/e.analyser.frequencyBinCount,r=Math.floor(20*Math.log10(o/255));return r===-1/0?0:r}return null}destroy(){Array.from(d(this,a)).map(([,t])=>this.removeSource(t.id)),this.audioDestination.stream.getTracks().forEach(t=>t.stop()),this.audioDestination.disconnect(),this.videoSyncDelayNode.disconnect(),this.audioContext.close()}};a=new WeakMap;export{u as default};
//# sourceMappingURL=index.mjs.map